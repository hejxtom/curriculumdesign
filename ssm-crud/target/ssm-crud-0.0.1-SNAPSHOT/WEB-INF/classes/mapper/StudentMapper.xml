<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atmangxing.crud.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.atmangxing.crud.bean.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="stu_user" jdbcType="VARCHAR" property="stuUser" />
    <result column="stu_pass" jdbcType="VARCHAR" property="stuPass" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
  </resultMap>
  <!--带班级查询-->
  <resultMap id="WithClassResultMap" type="com.atmangxing.crud.bean.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="stu_user" jdbcType="VARCHAR" property="stuUser" />
    <result column="stu_pass" jdbcType="VARCHAR" property="stuPass" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <association property="aClass" javaType="com.atmangxing.crud.bean.Class">
     <id column=" class_id" property="classId"/>
      <result column="class_name" property="className"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stu_id, stu_name, sex, age, phone, stu_user, stu_pass, class_id
  </sql>
  <!--带班级查询-->
  <sql id="WhitClass__Column_List">
    s.id, s.stu_id, s.stu_name, s.sex, s.age, s.phone, s.stu_user, s.stu_pass, s.class_id,c.class_id,c.class_name
  </sql>
   <!--不带班级查询-->
  <select id="selectByExample" parameterType="com.atmangxing.crud.bean.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.atmangxing.crud.bean.StudentExample">
    delete from tbl_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atmangxing.crud.bean.Student">
    insert into tbl_student (id, stu_id, stu_name, 
      sex, age, phone, stu_user, 
      stu_pass, class_id)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=VARCHAR}, #{stuName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{stuUser,jdbcType=VARCHAR}, 
      #{stuPass,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.atmangxing.crud.bean.Student">
    insert into tbl_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="stuUser != null">
        stu_user,
      </if>
      <if test="stuPass != null">
        stu_pass,
      </if>
      <if test="classId != null">
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="stuUser != null">
        #{stuUser,jdbcType=VARCHAR},
      </if>
      <if test="stuPass != null">
        #{stuPass,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <!--按照条件进行统计  -->
  <select id="countByExample" parameterType="com.atmangxing.crud.bean.StudentExample" resultType="java.lang.Long">
    select count(*) from tbl_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.stuUser != null">
        stu_user = #{record.stuUser,jdbcType=VARCHAR},
      </if>
      <if test="record.stuPass != null">
        stu_pass = #{record.stuPass,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_student
    set id = #{record.id,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=VARCHAR},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      stu_user = #{record.stuUser,jdbcType=VARCHAR},
      stu_pass = #{record.stuPass,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atmangxing.crud.bean.Student">
    update tbl_student
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="stuUser != null">
        stu_user = #{stuUser,jdbcType=VARCHAR},
      </if>
      <if test="stuPass != null">
        stu_pass = #{stuPass,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atmangxing.crud.bean.Student">
    update tbl_student
    set stu_id = #{stuId,jdbcType=VARCHAR},
      stu_name = #{stuName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      stu_user = #{stuUser,jdbcType=VARCHAR},
      stu_pass = #{stuPass,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!--带班级查询-->
  <select id="selectByExampleWithClass"  resultMap="WithClassResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WhitClass__Column_List" />
    from tbl_student s
    left join tbl_class c on s.class_id=c.class_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithClass" resultMap="WithClassResultMap">
    select
    <include refid="WhitClass__Column_List" />
    from tbl_student s
    left join tbl_class c on s.class_id=c.class_id
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findStudentByNameAndJobsAndPhone" parameterType="com.atmangxing.crud.bean.Student" resultMap="WithClassResultMap">
    select s.id, s.stu_id, s.stu_name, s.sex, s.age, s.phone, s.stu_user, s.stu_pass, s.class_id,c.class_id,c.class_name
     from tbl_student s,tbl_class c
    <where>
      <if test="stuId !=null and stuId !=''">
        and s.stu_id like concat('%',#{stuId},'%')
      </if>
      <if test="stuName !=null and stuName !=''">
        and s.stu_name= #{stuName}
      </if>
      <if test="classId !=null and classId !=''">
        and s.class_id= #{classId}
      </if>
      and s.class_id=c.class_id
    </where>
  </select>

  <select id="loginFindBy" parameterType="java.lang.String" resultType="com.atmangxing.crud.bean.Student">
    select * from tbl_student
    where stu_user=#{username}
    and  stu_pass=#{password}
  </select>


</mapper>